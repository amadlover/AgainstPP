#pragma once

enum class GraphicsError
{
	ePOPULATE_INSTANCE_LAYERS_AND_EXTENSIONS,
	eCREATE_INSTANCE,
	eSETUP_DEBUG_UTILS_MESSENGER,
	eCREATE_DEBUG_UTILS_MESSENGER,
	eDESTROY_DEBUG_UTILS_MESSENGER,
	eCREATE_SURFACE,
	eGET_PHYSICAL_DEVICE,
	ePOPULATE_DEVICE_LAYERS_AND_EXTENSIONS,
	eCREATE_GRAPHICS_DEVICE,
	eSURFACE_SUPPORT,
	eCREATE_SWAPCHAIN,
	eCREATE_IMAGE_VIEW,
	eCREATE_BUFFER,
	eALLOCATE_MEMORY,
	eBIND_BUFFER_MEMORY,
	eCREATE_IMAGE,
	eBIND_IMAGE_MEMORY,
	eMAP_MEMORY,
	eCREATE_DESCRIPTOR_SET_LAYOUT,
	eCREATE_PIPELINE_LAYOUT,
	eCREATE_DESCRIPTOR_POOL,
	eALLOCATE_DESCRIPTOR_SET,
	eCREATE_RENDER_PASS,
	eCREATE_SHADER_MODULE,
	eCREATE_FRAMEBUFFER,
	eBEGIN_COMMAND_BUFFER,
	eEND_COMMAND_BUFFER,
	eRESET_COMMAND_BUFFER,
	eCREATE_COMMAND_POOL,
	eALLOCATE_COMMAND_BUFFER,
	eCREATE_GRAPHICS_PIPELINE,
	eCREATE_SEMAPHORE,
	eACQUIRE_NEXT_IMAGE,
	eWAIT_FOR_FENCES,
	eCREATE_FENCE,
	eRESET_FENCE,
	eQUEUE_SUBMIT,
	eQUEUE_PRESENT,
	eUPDATE_UNIFORM_BUFFER,
	eCREATE_SAMPLER,
};

enum class GLTFError
{
	eCouldNotImport
};

void LogError (GraphicsError Err);
void LogError (GLTFError Err);

